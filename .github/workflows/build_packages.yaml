name: Build packages

on:
  push:
    tags:
      - v*

jobs:
  linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: 
          - ubuntu18.04 
          - ubuntu16.04 
          - ubuntu14.04 
          - debian10
          - debian9 
          - debian8 
          - opensuse
          - centos7 
          - centos6
          - raspbian10
          - raspbian9
          - raspbian8
  
    steps:
    - uses: actions/checkout@v1
    - name: set aws
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
    - name: build emqx packages
      env:
        ERL_OTP: erl21.3
        SYSTEM: ${{ matrix.os }}
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
        sudo docker run -i --name $SYSTEM-build -e EMQX_DEPS_DEFAULT_VSN=$version -e SYSTEM=$SYSTEM -v $(pwd):/emqx-rel emqx/build-env:$ERL_OTP-$SYSTEM sh -c "cd /emqx-rel/.github/workflows/script; if [ -z $(echo $SYSTEM | grep -o raspbian) ];then EMQX_NAME=emqx ./build.sh; fi; EMQX_NAME=emqx-edge ./build.sh"
        cd _packages/emqx && for var in $(ls emqx-$SYSTEM-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        cd _packages/emqx-edge/&& for var in $(ls emqx-edge-$SYSTEM-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        [ -d _packages/emqx ] && aws s3 cp --recursive ./_packages/emqx  s3://${{ secrets.AWS_S3_BUCKET }}/emqx-ce/$version
        [ -d _packages/emqx-edge ] && aws s3 cp --recursive ./_packages/emqx-edge s3://${{ secrets.AWS_S3_BUCKET }}/emqx-edge/$version

  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - [amd64, x86_64]
          - [arm64v8, aarch64]
          - [arm32v7, arm]
          - [i386, i386]
          - [s390x, s390x]

    steps:
    - name: set aws
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
    - uses: actions/checkout@v2
      with: 
        path: emqx-rel
    - name: fetch all history for all tags and branches
      run: |
        cd emqx-rel
        git fetch --prune --unshallow
    - uses: actions/checkout@v2
      with:
        repository: emqx/emqx-integration-test
        token: ${{ secrets.AccessToken }}
        path: emqx-integration-test
    - name: build emqx docker image
      env:
        ARCH: ${{ matrix.arch[0] }}
        QEMU_ARCH: ${{ matrix.arch[1] }}
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH make -C emqx-rel/deploy/docker save
        cd emqx-rel/_packages/emqx && for var in $(ls emqx-docker-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        aws s3 cp --recursive emqx-rel/_packages/emqx  s3://${{ secrets.AWS_S3_BUCKET }}/emqx-ce/$version
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker save
        cd emqx-rel/_packages/emqx-edge && for var in $(ls emqx-edge-docker-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        aws s3 cp --recursive emqx-rel/_packages/emqx-edge s3://${{ secrets.AWS_S3_BUCKET }}/emqx-edge/$version
    - name: docker test
      if: matrix.arch[0] == 'amd64'
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx PAHO_BRANCH="develop-4.0" make -C emqx-integration-test/paho-test cluster_test
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge PAHO_BRANCH="develop-4.0" make -C emqx-integration-test/paho-test cluster_test

  upload:
    runs-on: ubuntu-latest

    needs: [linux, docker]

    steps:
    - name: set aws
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
    - name: install dos2unix
      run: sudo apt-get update && sudo apt install -y dos2unix
    - name: get packages
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        mkdir -p packages
        aws s3 cp --recursive s3://${{ secrets.AWS_S3_BUCKET }}/emqx-ce/$version ./packages
        aws s3 cp --recursive s3://${{ secrets.AWS_S3_BUCKET }}/emqx-edge/$version ./packages
        cd packages && for var in $( ls |grep emqx |grep -v sha256); do 
          dos2unix $var.sha256
          echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
        done
    - uses: actions/checkout@v2
      with:
        path: emqx-rel
    - name: update to github and emqx.io
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          cd packages
          for var in $(ls); do
            ../emqx-rel/.github/workflows/script/upload_github_release_asset.sh \
              owner=emqx \
              repo=emqx \
              tag=$version \
              filename=$var \
              github_api_token=$(echo ${{ secrets.CI_GIT_TOKEN }})
          done
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/emqx-ce/$version/*,/emqx-edge/$version/*"
          curl -w %{http_code} \
            --insecure \
            -H "Content-Type: application/json" \
            -H "token: ${{ secrets.EMQX_IO_TOKEN }}" \
            -X POST \
            -d "{\"repo\":\"emqx/emqx\", \"tag\": \"version\" }" \
            ${{ secrets.EMQX_IO_RELEASE_API }}
        fi
    - name: push docker image to docker hub
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          sudo make -C emqx-rel/deploy/docker prepare
          cd ./packages && for var in $(ls |grep docker |grep -v sha256); do unzip $var; sudo docker load < ${var%.*}; rm -f ${var%.*}; done && cd -
          echo ${{ secrets.DockerHubPassword }} |sudo docker login -u ${{ secrets.DockerHubUser }} --password-stdin
          sudo EMQX_DEPS_DEFAULT_VSN=$version make -C emqx-rel emqx-docker-push
          sudo EMQX_DEPS_DEFAULT_VSN=$version make -C emqx-rel emqx-edge-docker-push
        fi
    - name: update repo.emqx.io
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          curl --silent --show-error \
            -H "Authorization: token ${{ secrets.CI_GIT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -X POST \
            -d "{\"ref\":\"v1.0.1\",\"inputs\":{\"version\": \"$version\", \"emqx_ce\": \"true\"}}" \
            "https://api.github.com/repos/emqx/emqx-ci-helper/actions/workflows/update_emqx_repos.yaml/dispatches"
        fi
    # - name: update homebrew packages
    #   run: |
    #     if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
    #     if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ] && [ -z $(echo $version | grep -oE "(alpha|beta|rc)\.[0-9]") ]; then
    #       curl -H "Authorization: token ${{ secrets.AccessToken }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" -X POST -d "{\"event_type\":\"update_homebrew\",\"client_payload\":{\"version\": \"$version\"}}" https://api.github.com/repos/emqx/emqx-packages-docker/dispatches
    #     fi
